apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: dsav-txn2
  labels:
    app: dsav-txn2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: dsav-txn2
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: wallet
      #             operator: In
      #             values: ["yes"]
      containers:
      - name: dsav-txn2
        image: tnindo/finxcore:0.250
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        - containerPort: 8081
        env:
        - name: TO_REPLACE_Finxact_Debug
          value: "true"
        - name: TO_REPLACE_Finxact_TimeOffset
          value: "TO_REPLACE_TimeOffset"
        - name: FINX_CORE_DB_SQL_URL
          value: "host=finxactpg port=5432 user=postgres dbname=zbch_trn_db password=password sslmode=disable"
        - name: FINX_CORE_REPORTDB_SQL_URL
          value: "host=finxactpg port=5432 user=postgres dbname=core_reports password=password sslmode=disable"
        volumeMounts:
#        - mountPath: /application/cfg
#          name: application-vol-config
        - mountPath: /application/file/internal/output
          name: application-vol-file-internal
      restartPolicy: Always
      imagePullSecrets:
      - name: regsecret
      volumes:
#      - name: application-vol-config
#        hostPath:
#          path: /data/dsav_vol_txn/cfg
      - name: application-vol-file-internal
        hostPath:
          path: /data/dsav/file/txn
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
---
apiVersion: v1
kind: Service
metadata:
  name: dsav-txn2
  labels:
    app: dsav-txn2
spec:
  ports:
  -  port: 8080
     targetPort: 8080
     nodePort: 31911
     name: app
  -  port: 8081
     targetPort: 8081
     nodePort: 31912
     name: grpc
  type: NodePort
  selector:
    app: dsav-txn2
